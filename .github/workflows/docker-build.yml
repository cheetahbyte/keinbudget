name: Build, Push and Test

on:
  push:
    branches: [main, development]
  pull_request:
    branches: [main]

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      tag: ${{ steps.tag.outputs.tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Generate version.txt
        run: python scripts/version.py

      - name: Set up QEMU (for ARM64 builds)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine image tag
        id: tag
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "tag=latest" >> "$GITHUB_OUTPUT"
          elif [[ "${{ github.ref }}" == "refs/heads/development" ]]; then
            echo "tag=nightly" >> "$GITHUB_OUTPUT"
          else
            echo "tag=dev" >> "$GITHUB_OUTPUT"
          fi

      - name: Build and push Docker image (multi-platform)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/${{ github.repository }}:${{ steps.tag.outputs.tag }}

  playwright:
    needs: docker
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Show image tag
        run: echo "Using image tag ${{ needs.docker.outputs.tag }}"

      - name: Pull Docker image
        run: docker pull ghcr.io/${{ github.repository }}:${{ needs.docker.outputs.tag }}

      - name: Run Docker container
        run: docker run -d -p 3000:8000 --name keinbudget ghcr.io/${{ github.repository }}:${{ needs.docker.outputs.tag }}

      - name: Create default user
        run: |
          curl --request POST --url http://localhost:8000/api/v1/users/ --header 'content-type: application/json' --data '{ "email": "test@test.de", "password": "password", "last_name": "Test", "first_name": "Test"}'

      - name: Install dependencies
        working-directory: client
        run: npm ci

      - name: Install Playwright Browsers
        working-directory: client
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        working-directory: client
        run: npx playwright test

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
